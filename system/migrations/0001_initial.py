# Generated by Django 5.2.4 on 2025-08-04 21:48

import django.db.models.deletion
import system.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=system.models.uploaded_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0)),
                ('width_field', models.IntegerField(default=0)),
                ('car_name', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=100)),
                ('model_year', models.IntegerField(blank=True, null=True)),
                ('num_of_seats', models.IntegerField()),
                ('cost_par_day', models.DecimalField(decimal_places=2, max_digits=10)),
                ('content', models.TextField()),
                ('like', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('available', 'Available'), ('rented', 'Rented'), ('maintenance', 'Under Maintenance'), ('inactive', 'Inactive')], default='available', max_length=20)),
                ('transmission', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic')], default='manual', max_length=20)),
                ('fuel_type', models.CharField(choices=[('petrol', 'Petrol'), ('diesel', 'Diesel'), ('electric', 'Electric'), ('hybrid', 'Hybrid')], default='petrol', max_length=20)),
                ('mileage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('license_plate', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit_salaries', models.BooleanField(default=True)),
                ('can_manage_drivers', models.BooleanField(default=True)),
                ('can_manage_cars', models.BooleanField(default=True)),
                ('can_view_reports', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CarMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('maintenance_date', models.DateField()),
                ('next_maintenance_date', models.DateField(blank=True, null=True)),
                ('performed_by', models.CharField(max_length=100)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_logs', to='system.car')),
            ],
            options={
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='Bangladesh', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['latitude', 'longitude'], name='system_loca_latitud_dc4d86_idx'), models.Index(fields=['city', 'state'], name='system_loca_city_baf845_idx')],
                'unique_together': {('city', 'state', 'country')},
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('license_no', models.CharField(max_length=100, unique=True)),
                ('contact_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('hired_date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('on_trip', 'On Trip'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('experience_years', models.IntegerField(default=0)),
                ('rating', models.DecimalField(decimal_places=2, default=5.0, max_digits=3)),
                ('total_trips', models.IntegerField(default=0)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.location')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('category', models.CharField(choices=[('regular', 'Regular'), ('premium', 'Premium'), ('corporate', 'Corporate'), ('vip', 'VIP')], default='regular', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('credit_score', models.IntegerField(default=700)),
                ('total_bookings', models.IntegerField(default=0)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.location')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.location'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_name', models.CharField(max_length=200)),
                ('sender_email', models.EmailField(max_length=254)),
                ('message_type', models.CharField(choices=[('inquiry', 'General Inquiry'), ('complaint', 'Complaint'), ('feedback', 'Feedback'), ('support', 'Support Request')], default='inquiry', max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('response', models.TextField(blank=True, null=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.client')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=20, unique=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='system.car')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='system.client')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.driver')),
                ('dropoff_location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dropoff_orders', to='system.location')),
                ('pickup_location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pickup_orders', to='system.location')),
            ],
        ),
        migrations.CreateModel(
            name='DriverApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('license_no', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('experience_years', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewing', 'Under Review'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('applied_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.admin')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='system.location')),
            ],
            options={
                'ordering': ['-applied_at'],
                'indexes': [models.Index(fields=['status', 'applied_at'], name='system_driv_status_1b7289_idx'), models.Index(fields=['location'], name='system_driv_locatio_1b3a33_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['status', 'location'], name='system_driv_status_a32dcb_idx'),
        ),
        migrations.AddIndex(
            model_name='driver',
            index=models.Index(fields=['salary'], name='system_driv_salary_6ba92a_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['category'], name='system_clie_categor_b43b32_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['location'], name='system_clie_locatio_241b62_idx'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['email'], name='system_clie_email_4c5bca_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['status', 'location'], name='system_car_status_0cc924_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['cost_par_day'], name='system_car_cost_pa_c995a8_idx'),
        ),
        migrations.AddIndex(
            model_name='car',
            index=models.Index(fields=['company_name'], name='system_car_company_f93f87_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_read', 'created_at'], name='system_mess_is_read_dcd7d7_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type'], name='system_mess_message_1627ba_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status', 'created_at'], name='system_orde_status_079be6_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['client', 'status'], name='system_orde_client__13816c_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_id'], name='system_orde_order_i_96adc6_idx'),
        ),
    ]
